openapi: 3.0.0
info:
  title: Journaling for Therapy API
  version: 1.0.0
  description: This set of APIs allows clients to record emotions in a journal and share them with therapists. This also allows clients to mangage their therapy sessions.  Therapists can manage sessions, clients, and notes.

servers:
  - url: https://api.example.com/v1
    description: Production server

tags:
  - name: Auth
    description: Endpoints for authentication and user account management.
  - name: Clients
    description: Endpoints for client-related actions.
  - name: Therapists
    description: Endpoints for therapist-related actions.
  - name: Sessions
    description: Endpoints for creating and managing therapy sessions.
  - name: Messages
    description: Endpoints for sending and viewing messages between clients and therapists.
  - name: Search
    description: Endpoints for keyword search across notes, journals, and user data.

paths:
  /auth/client/signup:
    post:
      tags: [Auth]
      summary: Create a client account
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateClientRequest"
      responses:
        "201":
          description: Client account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "400":
          description: Bad request

  /auth/client/login:
    post:
      tags: [Auth]
      summary: Login as a client
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Successful login (returns auth token)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        "401":
          description: Unauthorized

  /auth/therapist/signup:
    post:
      tags: [Auth]
      summary: Create a therapist account
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTherapistRequest"
      responses:
        "201":
          description: Therapist account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Therapist"
        "400":
          description: Bad request

  /auth/therapist/login:
    post:
      tags: [Auth]
      summary: Login as a therapist
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Successful login (returns auth token)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        "401":
          description: Unauthorized

  /clients/{clientId}:
    get:
      tags: [Clients]
      summary: Get client details by ID
      parameters:
        - $ref: "#/components/parameters/clientId"
      responses:
        "200":
          description: Client details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "404":
          description: Client not found

  /clients/{clientId}/therapists:
    get:
      tags: [Clients]
      summary: List therapists mapped to a client and who have access to the journal
      parameters:
        - $ref: "#/components/parameters/clientId"
      responses:
        "200":
          description: List of therapists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Therapist"
    post:
      tags: [Clients]
      summary: Map a therapist to a client account
      parameters:
        - $ref: "#/components/parameters/clientId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                therapistId:
                  type: string
      responses:
        "201":
          description: Therapist mapped to client
        "400":
          description: Bad request
        "404":
          description: Client or Therapist not found

  /clients/{clientId}/therapists/{therapistId}:
    delete:
      tags: [Clients]
      summary: Remove a therapist mapped to a client account entirely
      parameters:
        - $ref: "#/components/parameters/clientId"
        - $ref: "#/components/parameters/therapistId"
      responses:
        "204":
          description: Therapist removed from client's account
        "404":
          description: Client or Therapist not found

  /clients/{clientId}/therapists/{therapistId}/journal-access:
    patch:
      tags: [Clients]
      summary: Enable or disable a therapist's access to the client's journal
      parameters:
        - $ref: "#/components/parameters/clientId"
        - $ref: "#/components/parameters/therapistId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                hasJournalAccess:
                  type: boolean
      responses:
        "200":
          description: Therapist journal access updated
        "404":
          description: Client or Therapist not found

  /clients/{clientId}/therapists/{therapistId}/journal-access/requests:
    post:
      tags: [Clients]
      summary: Approve or reject a therapist's request for access to client journal
      parameters:
        - $ref: "#/components/parameters/clientId"
        - $ref: "#/components/parameters/therapistId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                approve:
                  type: boolean
      responses:
        "200":
          description: Access request resolved
        "404":
          description: Client or Therapist not found

  /clients/{clientId}/journal:
    get:
      tags: [Clients]
      summary: Get all emotion journal entries for a client
      parameters:
        - $ref: "#/components/parameters/clientId"
      responses:
        "200":
          description: List of journal entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JournalEntry"
    post:
      tags: [Clients]
      summary: Add a record of an emotion felt
      parameters:
        - $ref: "#/components/parameters/clientId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateJournalEntry"
      responses:
        "201":
          description: Journal entry created
        "404":
          description: Client not found

  /therapists/{therapistId}:
    get:
      tags: [Therapists]
      summary: Get therapist details by ID
      parameters:
        - $ref: "#/components/parameters/therapistId"
      responses:
        "200":
          description: Therapist details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Therapist"
        "404":
          description: Therapist not found

  /therapists/{therapistId}/clients:
    get:
      tags: [Therapists]
      summary: View list of clients that the therapist has
      parameters:
        - $ref: "#/components/parameters/therapistId"
      responses:
        "200":
          description: List of clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Client"

  /therapists/{therapistId}/clients/{clientId}/request-map:
    post:
      tags: [Therapists]
      summary: Request a new client to be mapped for therapy
      parameters:
        - $ref: "#/components/parameters/therapistId"
        - $ref: "#/components/parameters/clientId"
      responses:
        "201":
          description: Request for mapping client to therapist created
        "404":
          description: Therapist or Client not found

  /therapists/{therapistId}/clients/{clientId}/request-journal-access:
    post:
      tags: [Therapists]
      summary: Request a client's journal access
      parameters:
        - $ref: "#/components/parameters/therapistId"
        - $ref: "#/components/parameters/clientId"
      responses:
        "201":
          description: Request for journal access created
        "404":
          description: Therapist or Client not found

  /therapists/{therapistId}/clients/{clientId}:
    delete:
      tags: [Therapists]
      summary: Remove a client from therapist's list
      parameters:
        - $ref: "#/components/parameters/therapistId"
        - $ref: "#/components/parameters/clientId"
      responses:
        "204":
          description: Client removed from therapist
        "404":
          description: Therapist or Client not found

  /therapists/{therapistId}/clients/{clientId}/journal:
    get:
      tags: [Therapists]
      summary: View client journal
      parameters:
        - $ref: "#/components/parameters/therapistId"
        - $ref: "#/components/parameters/clientId"
      responses:
        "200":
          description: List of clientâ€™s journal entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JournalEntry"
        "403":
          description: Therapist does not have journal access
        "404":
          description: Therapist or Client not found

  /therapists/{therapistId}/sessions:
    get:
      tags: [Sessions]
      summary: List all sessions created by this therapist
      parameters:
        - $ref: "#/components/parameters/therapistId"
      responses:
        "200":
          description: List of sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Session"
    post:
      tags: [Sessions]
      summary: Create a new session
      parameters:
        - $ref: "#/components/parameters/therapistId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSessionRequest"
      responses:
        "201":
          description: Session created
        "404":
          description: Therapist not found

  /therapists/{therapistId}/sessions/{sessionId}:
    get:
      tags: [Sessions]
      summary: Get session details
      parameters:
        - $ref: "#/components/parameters/therapistId"
        - $ref: "#/components/parameters/sessionId"
      responses:
        "200":
          description: Session details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        "404":
          description: Session or Therapist not found
    put:
      tags: [Sessions]
      summary: Modify details of a session
      parameters:
        - $ref: "#/components/parameters/therapistId"
        - $ref: "#/components/parameters/sessionId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSessionRequest"
      responses:
        "200":
          description: Session updated
        "404":
          description: Session or Therapist not found

  /sessions/{sessionId}/appointment:
    post:
      tags: [Sessions]
      summary: Client requests an appointment in an available session
      parameters:
        - $ref: "#/components/parameters/sessionId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                clientId:
                  type: string
      responses:
        "201":
          description: Appointment request created
        "404":
          description: Session or Client not found

  /messages/client/{clientId}/therapist/{therapistId}:
    get:
      tags: [Messages]
      summary: Get message history between a client and a therapist
      parameters:
        - $ref: "#/components/parameters/clientId"
        - $ref: "#/components/parameters/therapistId"
      responses:
        "200":
          description: Message history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
        "404":
          description: No messages found or invalid client/therapist

    post:
      tags: [Messages]
      summary: Send a message from the client to the therapist or vice versa
      parameters:
        - $ref: "#/components/parameters/clientId"
        - $ref: "#/components/parameters/therapistId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                sender:
                  type: string
                  enum: [client, therapist]
                  description: "Specify 'client' or 'therapist'"
                content:
                  type: string
      responses:
        "201":
          description: Message sent
        "404":
          description: Invalid client or therapist

  /search/clients/{clientId}:
    get:
      tags: [Search]
      summary: Run keyword search across therapist notes and the client's own emotions journal
      parameters:
        - $ref: "#/components/parameters/clientId"
        - name: q
          in: query
          description: The search keyword
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResults"

  /search/therapists/{therapistId}:
    get:
      tags: [Search]
      summary: Run keyword search across clients, notes, and emotion journals (accessible to therapist)
      parameters:
        - $ref: "#/components/parameters/therapistId"
        - name: q
          in: query
          description: The search keyword
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResults"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    clientId:
      name: clientId
      in: path
      required: true
      description: ID of the client
      schema:
        type: string
    therapistId:
      name: therapistId
      in: path
      required: true
      description: ID of the therapist
      schema:
        type: string
    sessionId:
      name: sessionId
      in: path
      required: true
      description: ID of the session
      schema:
        type: string

  schemas:
    CreateClientRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    CreateTherapistRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        specialization:
          type: string
          description: E.g., "Clinical Psychologist", "Counselor", etc.
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    AuthToken:
      type: object
      properties:
        token:
          type: string
          description: JWT or any other token

    Client:
      type: object
      properties:
        id:
          type: string
        email:
          type: string

    Therapist:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        specialization:
          type: string

    CreateJournalEntry:
      type: object
      required:
        - feeling
        - intensity
      properties:
        timeOfEmotion:
          type: string
          format: date-time
          description: When the emotion was felt
        feeling:
          type: string
          description: E.g., "anxious", "joyful", "frustrated"
        intensity:
          type: integer
          format: int32
          description: A numeric scale for intensity (e.g., 1-10)
    JournalEntry:
      type: object
      properties:
        id:
          type: string
        clientId:
          type: string
        timeOfEmotion:
          type: string
          format: date-time
        feeling:
          type: string
        intensity:
          type: integer
        createdAt:
          type: string
          format: date-time

    CreateSessionRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
        privateNotes:
          type: string
          description: Notes private to the therapist
        sharedNotes:
          type: string
          description: Assignments or notes visible to both
    Session:
      type: object
      properties:
        id:
          type: string
        therapistId:
          type: string
        title:
          type: string
        privateNotes:
          type: string
        sharedNotes:
          type: string
        createdAt:
          type: string
          format: date-time
    UpdateSessionRequest:
      type: object
      properties:
        title:
          type: string
        privateNotes:
          type: string
        sharedNotes:
          type: string

    Message:
      type: object
      properties:
        id:
          type: string
        sender:
          type: string
          description: "client or therapist"
        receiver:
          type: string
          description: "client or therapist"
        content:
          type: string
        createdAt:
          type: string
          format: date-time

    SearchResults:
      type: object
      properties:
        query:
          type: string
        results:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: "session | note | journalEntry | client | therapist"
              match:
                type: string
                description: "Snippet or matched text"
security:
  - BearerAuth: []
